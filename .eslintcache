[{"/home/miha/Documents/projects/js/nexomia-client/src/index.tsx":"1","/home/miha/Documents/projects/js/nexomia-client/src/views/App.tsx":"2","/home/miha/Documents/projects/js/nexomia-client/src/components/layout/Sidebar.tsx":"3","/home/miha/Documents/projects/js/nexomia-client/src/components/layout/Content.tsx":"4","/home/miha/Documents/projects/js/nexomia-client/src/components/layout/SidebarHeader.tsx":"5","/home/miha/Documents/projects/js/nexomia-client/src/components/layout/ContentHeader.tsx":"6","/home/miha/Documents/projects/js/nexomia-client/src/components/layout/Guilds.tsx":"7","/home/miha/Documents/projects/js/nexomia-client/src/components/guilds/UserMenu.tsx":"8","/home/miha/Documents/projects/js/nexomia-client/src/components/guilds/PanelButton.tsx":"9","/home/miha/Documents/projects/js/nexomia-client/src/views/Login.tsx":"10","/home/miha/Documents/projects/js/nexomia-client/src/components/ui/Layer.tsx":"11","/home/miha/Documents/projects/js/nexomia-client/src/components/ui/Modal.tsx":"12","/home/miha/Documents/projects/js/nexomia-client/src/components/ui/ModalHeader.tsx":"13","/home/miha/Documents/projects/js/nexomia-client/src/components/ui/InputField.tsx":"14","/home/miha/Documents/projects/js/nexomia-client/src/components/ui/FilledButton.tsx":"15","/home/miha/Documents/projects/js/nexomia-client/src/components/ui/StyledText.tsx":"16","/home/miha/Documents/projects/js/nexomia-client/src/views/Register.tsx":"17","/home/miha/Documents/projects/js/nexomia-client/src/components/ui/LoadingPlaceholder.tsx":"18","/home/miha/Documents/projects/js/nexomia-client/src/components/animations/Dots.tsx":"19","/home/miha/Documents/projects/js/nexomia-client/src/i18n/config.ts":"20","/home/miha/Documents/projects/js/nexomia-client/src/services/api/auth/auth.service.ts":"21","/home/miha/Documents/projects/js/nexomia-client/src/services/api/common.ts":"22","/home/miha/Documents/projects/js/nexomia-client/src/config.ts":"23","/home/miha/Documents/projects/js/nexomia-client/src/services/api/users/users.service.ts":"24","/home/miha/Documents/projects/js/nexomia-client/src/services/api/guilds/guilds.service.ts":"25","/home/miha/Documents/projects/js/nexomia-client/src/components/layout/Modals.tsx":"26","/home/miha/Documents/projects/js/nexomia-client/src/components/modals/ServerCreationModal.tsx":"27","/home/miha/Documents/projects/js/nexomia-client/src/components/ui/BigPageButton.tsx":"28","/home/miha/Documents/projects/js/nexomia-client/src/components/css/PanelIconCss.tsx":"29","/home/miha/Documents/projects/js/nexomia-client/src/components/css/LayerBackgroundShadeCss.tsx":"30","/home/miha/Documents/projects/js/nexomia-client/src/components/css/InactiveLayerCss.tsx":"31","/home/miha/Documents/projects/js/nexomia-client/src/components/sidebar/Tab.tsx":"32","/home/miha/Documents/projects/js/nexomia-client/src/components/css/StyledIconCss.tsx":"33","/home/miha/Documents/projects/js/nexomia-client/src/store/UserStore.tsx":"34","/home/miha/Documents/projects/js/nexomia-client/src/store/AuthStore.tsx":"35","/home/miha/Documents/projects/js/nexomia-client/src/store/GuildStore.tsx":"36","/home/miha/Documents/projects/js/nexomia-client/src/store/ModalStore.tsx":"37","/home/miha/Documents/projects/js/nexomia-client/src/store/ChannelStore.tsx":"38","/home/miha/Documents/projects/js/nexomia-client/src/services/api/channels/channels.service.ts":"39","/home/miha/Documents/projects/js/nexomia-client/src/components/chat/ChatView.tsx":"40","/home/miha/Documents/projects/js/nexomia-client/src/components/chat/ChatInput.tsx":"41","/home/miha/Documents/projects/js/nexomia-client/src/components/chat/MessageView.tsx":"42","/home/miha/Documents/projects/js/nexomia-client/src/components/layout/CenteredContainer.tsx":"43","/home/miha/Documents/projects/js/nexomia-client/src/services/api/messages/messages.service.ts":"44","/home/miha/Documents/projects/js/nexomia-client/src/store/MessageStore.tsx":"45","/home/miha/Documents/projects/js/nexomia-client/src/store/MessageCacheStore.tsx":"46","/home/miha/Documents/projects/js/nexomia-client/src/store/GuildCacheStore.tsx":"47","/home/miha/Documents/projects/js/nexomia-client/src/store/ChannelCacheStore.tsx":"48","/home/miha/Documents/projects/js/nexomia-client/src/store/UserCacheStore.tsx":"49","/home/miha/Documents/projects/js/nexomia-client/src/components/chat/MessageRenderer.tsx":"50","/home/miha/Documents/projects/js/nexomia-client/src/components/profile/ProfileView.tsx":"51","/home/miha/Documents/projects/js/nexomia-client/src/utils/isTabGuild.ts":"52","/home/miha/Documents/projects/js/nexomia-client/src/store/MemberCacheStore.tsx":"53","/home/miha/Documents/projects/js/nexomia-client/src/components/contextmenus/ContextMenu.tsx":"54","/home/miha/Documents/projects/js/nexomia-client/src/store/ContextMenuStore.tsx":"55","/home/miha/Documents/projects/js/nexomia-client/src/components/contextmenus/ContextTab.tsx":"56","/home/miha/Documents/projects/js/nexomia-client/src/components/settings/SettingsView.tsx":"57","/home/miha/Documents/projects/js/nexomia-client/src/components/settings/guild/RolesView.tsx":"58","/home/miha/Documents/projects/js/nexomia-client/src/services/api/roles/roles.service.ts":"59","/home/miha/Documents/projects/js/nexomia-client/src/store/RolesCacheStore.tsx":"60","/home/miha/Documents/projects/js/nexomia-client/src/components/settings/ui/Role.tsx":"61","/home/miha/Documents/projects/js/nexomia-client/src/components/settings/ui/Permission.tsx":"62","/home/miha/Documents/projects/js/nexomia-client/src/components/settings/ui/PermissionEditor.tsx":"63","/home/miha/Documents/projects/js/nexomia-client/src/store/models/ComputedPermissions.ts":"64","/home/miha/Documents/projects/js/nexomia-client/src/components/layout/MemberSidebar.tsx":"65","/home/miha/Documents/projects/js/nexomia-client/src/utils/PermissionCalculator.ts":"66","/home/miha/Documents/projects/js/nexomia-client/src/components/sidebar/Member.tsx":"67","/home/miha/Documents/projects/js/nexomia-client/src/utils/getMemberColor.ts":"68","/home/miha/Documents/projects/js/nexomia-client/src/services/socket/SocketManager.ts":"69","/home/miha/Documents/projects/js/nexomia-client/src/services/socket/events/Messages.ts":"70","/home/miha/Documents/projects/js/nexomia-client/src/services/socket/events/Users.ts":"71","/home/miha/Documents/projects/js/nexomia-client/src/services/socket/events/Roles.ts":"72","/home/miha/Documents/projects/js/nexomia-client/src/utils/getUrlEncodedString.ts":"73","/home/miha/Documents/projects/js/nexomia-client/src/utils/getIconString.ts":"74","/home/miha/Documents/projects/js/nexomia-client/src/components/settings/guild/GeneralView.tsx":"75","/home/miha/Documents/projects/js/nexomia-client/src/components/ui/DropdownInput.tsx":"76","/home/miha/Documents/projects/js/nexomia-client/src/components/modals/ChannelCreationModal.tsx":"77","/home/miha/Documents/projects/js/nexomia-client/src/services/socket/events/Channels.ts":"78"},{"size":745,"mtime":1627597352775,"results":"79","hashOfConfig":"80"},{"size":3758,"mtime":1627993854313,"results":"81","hashOfConfig":"80"},{"size":7745,"mtime":1629295524468,"results":"82","hashOfConfig":"80"},{"size":1612,"mtime":1627683670922,"results":"83","hashOfConfig":"80"},{"size":163,"mtime":1627018358125,"results":"84","hashOfConfig":"80"},{"size":2103,"mtime":1627680736184,"results":"85","hashOfConfig":"80"},{"size":2928,"mtime":1629115918202,"results":"86","hashOfConfig":"80"},{"size":2827,"mtime":1629124778477,"results":"87","hashOfConfig":"80"},{"size":448,"mtime":1627680724782,"results":"88","hashOfConfig":"80"},{"size":3243,"mtime":1627596811177,"results":"89","hashOfConfig":"80"},{"size":276,"mtime":1627682556678,"results":"90","hashOfConfig":"80"},{"size":308,"mtime":1627028022731,"results":"91","hashOfConfig":"80"},{"size":277,"mtime":1626934198646,"results":"92","hashOfConfig":"80"},{"size":769,"mtime":1627227991041,"results":"93","hashOfConfig":"80"},{"size":462,"mtime":1627227809580,"results":"94","hashOfConfig":"80"},{"size":252,"mtime":1627214753219,"results":"95","hashOfConfig":"80"},{"size":3947,"mtime":1627925367669,"results":"96","hashOfConfig":"80"},{"size":1570,"mtime":1627909372419,"results":"97","hashOfConfig":"80"},{"size":616,"mtime":1626934226635,"results":"98","hashOfConfig":"80"},{"size":334,"mtime":1626959070191,"results":"99","hashOfConfig":"80"},{"size":688,"mtime":1626955086129,"results":"100","hashOfConfig":"80"},{"size":1366,"mtime":1629024075137,"results":"101","hashOfConfig":"80"},{"size":146,"mtime":1627989350183,"results":"102","hashOfConfig":"80"},{"size":349,"mtime":1627295837712,"results":"103","hashOfConfig":"80"},{"size":1792,"mtime":1629294736912,"results":"104","hashOfConfig":"80"},{"size":523,"mtime":1629293443828,"results":"105","hashOfConfig":"80"},{"size":4590,"mtime":1627929076649,"results":"106","hashOfConfig":"80"},{"size":467,"mtime":1627027430873,"results":"107","hashOfConfig":"80"},{"size":131,"mtime":1627022154493,"results":"108","hashOfConfig":"80"},{"size":83,"mtime":1627028155787,"results":"109","hashOfConfig":"80"},{"size":134,"mtime":1627028396713,"results":"110","hashOfConfig":"80"},{"size":1522,"mtime":1627911597681,"results":"111","hashOfConfig":"80"},{"size":84,"mtime":1627022005885,"results":"112","hashOfConfig":"80"},{"size":619,"mtime":1627209298039,"results":"113","hashOfConfig":"80"},{"size":717,"mtime":1627209298039,"results":"114","hashOfConfig":"80"},{"size":382,"mtime":1627297490390,"results":"115","hashOfConfig":"80"},{"size":432,"mtime":1629293477676,"results":"116","hashOfConfig":"80"},{"size":495,"mtime":1627925177037,"results":"117","hashOfConfig":"80"},{"size":380,"mtime":1627216994941,"results":"118","hashOfConfig":"80"},{"size":3800,"mtime":1629115183020,"results":"119","hashOfConfig":"80"},{"size":2945,"mtime":1627924083173,"results":"120","hashOfConfig":"80"},{"size":2432,"mtime":1627924144179,"results":"121","hashOfConfig":"80"},{"size":160,"mtime":1627243655376,"results":"122","hashOfConfig":"80"},{"size":685,"mtime":1629024016163,"results":"123","hashOfConfig":"80"},{"size":1346,"mtime":1629115043490,"results":"124","hashOfConfig":"80"},{"size":606,"mtime":1627925229167,"results":"125","hashOfConfig":"80"},{"size":1229,"mtime":1627937675503,"results":"126","hashOfConfig":"80"},{"size":606,"mtime":1627925163147,"results":"127","hashOfConfig":"80"},{"size":915,"mtime":1628018628776,"results":"128","hashOfConfig":"80"},{"size":3867,"mtime":1629125109455,"results":"129","hashOfConfig":"80"},{"size":3921,"mtime":1629143495823,"results":"130","hashOfConfig":"80"},{"size":74,"mtime":1627645846682,"results":"131","hashOfConfig":"80"},{"size":627,"mtime":1627925222947,"results":"132","hashOfConfig":"80"},{"size":1661,"mtime":1628115214134,"results":"133","hashOfConfig":"80"},{"size":507,"mtime":1627655773684,"results":"134","hashOfConfig":"80"},{"size":1117,"mtime":1627655670692,"results":"135","hashOfConfig":"80"},{"size":775,"mtime":1629130963831,"results":"136","hashOfConfig":"80"},{"size":8702,"mtime":1628110164998,"results":"137","hashOfConfig":"80"},{"size":653,"mtime":1627925183751,"results":"138","hashOfConfig":"80"},{"size":906,"mtime":1628106616785,"results":"139","hashOfConfig":"80"},{"size":1654,"mtime":1628091171609,"results":"140","hashOfConfig":"80"},{"size":2354,"mtime":1627924832529,"results":"141","hashOfConfig":"80"},{"size":10621,"mtime":1628014546598,"results":"142","hashOfConfig":"80"},{"size":638,"mtime":1629293832306,"results":"143","hashOfConfig":"80"},{"size":3507,"mtime":1629279363603,"results":"144","hashOfConfig":"80"},{"size":1605,"mtime":1629293906328,"results":"145","hashOfConfig":"80"},{"size":2712,"mtime":1629117671000,"results":"146","hashOfConfig":"80"},{"size":473,"mtime":1629295098936,"results":"147","hashOfConfig":"80"},{"size":1784,"mtime":1629295408772,"results":"148","hashOfConfig":"80"},{"size":692,"mtime":1629292279264,"results":"149","hashOfConfig":"80"},{"size":443,"mtime":1628018757040,"results":"150","hashOfConfig":"80"},{"size":618,"mtime":1628107829625,"results":"151","hashOfConfig":"80"},{"size":375,"mtime":1629023952157,"results":"152","hashOfConfig":"80"},{"size":247,"mtime":1629115897864,"results":"153","hashOfConfig":"80"},{"size":3756,"mtime":1629236189483,"results":"154","hashOfConfig":"80"},{"size":2542,"mtime":1629237608718,"results":"155","hashOfConfig":"80"},{"size":2335,"mtime":1629295056642,"results":"156","hashOfConfig":"80"},{"size":686,"mtime":1629295364584,"results":"157","hashOfConfig":"80"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},"9q8v7z",{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"160"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"160"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"160"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"160"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247","usedDeprecatedRules":"160"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"280","usedDeprecatedRules":"160"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/miha/Documents/projects/js/nexomia-client/src/index.tsx",[],["321","322"],"/home/miha/Documents/projects/js/nexomia-client/src/views/App.tsx",["323"],"import {\n  Switch,\n  Route,\n  useHistory\n} from 'react-router-dom';\n\nimport { useState, useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { useStore } from 'effector-react';\nimport $AuthStore, { setToken } from '../store/AuthStore';\nimport { setUser } from '../store/UserStore';\nimport { setGuilds } from '../store/GuildStore';\nimport { cacheGuilds } from '../store/GuildCacheStore';\nimport { setContextMenu } from '../store/ContextMenuStore';\n\nimport UsersService from '../services/api/users/users.service';\nimport GuildsService from '../services/api/guilds/guilds.service';\nimport CommonRequestManager from '../services/api/common';\n\nimport SocketManager from '../services/socket/SocketManager';\n\nimport '../i18n/config';\n\nimport '../styles/App.css';\n\nimport Guilds from '../components/layout/Guilds';\nimport Sidebar from '../components/layout/Sidebar';\nimport MemberSidebar from '../components/layout/MemberSidebar';\nimport Content from '../components/layout/Content';\nimport LoadingPlaceholder from '../components/ui/LoadingPlaceholder';\nimport Modals from '../components/layout/Modals';\n\nimport preloaders from '../i18n/preloaders.json';\nimport Guild from '../store/models/Guild';\nimport ContextMenu from '../components/contextmenus/ContextMenu';\n\nfunction App() {\n  const { t } = useTranslation(['states']);\n\n  const { token } = useStore($AuthStore);\n\n  const history = useHistory();\n\n  const [loaded, setLoaded] = useState(false);\n\n  const [loaderTitleAuthor, setLoaderTitleAuthor] = useState(0);\n  const [loaderTitleId, setLoaderTitleId] = useState(0);\n\n  useEffect(() => {\n    const authorId = getRandomInt(preloaders.authors.length)\n    setLoaderTitleAuthor(authorId);\n    setLoaderTitleId(preloaders.authors[authorId].prefix + getRandomInt(preloaders.authors[authorId].count));\n\n    preloadUserInfo();\n  }, []);\n\n  return (\n    <div className=\"App dark-theme\" onClick={ closeContextMenu } onContextMenu={ (event: any) => event.preventDefault() }>\n      <LoadingPlaceholder\n        title={ t(`states:loading.${loaderTitleId.toString()}`) }\n        subtext={ `@${preloaders.authors[loaderTitleAuthor].name}` }\n        active={ !loaded }\n        solid={ true }\n      />\n      <ContextMenu />\n      <Switch>\n        <Route path={`/channels/:guildId/:channelId`}>\n          <Modals />\n          <Guilds />\n          <Sidebar />\n          <Content />\n          <MemberSidebar />\n        </Route>\n\n        <Route path={`/channels/:guildId`}>\n          <Modals />\n          <Guilds />\n          <Sidebar />\n          <Content />\n        </Route>\n\n        <Route path={`/:path/:guildId/:channelId`}>\n          <Modals />\n          <Guilds />\n          <Sidebar />\n          <Content />\n        </Route>\n\n        <Route path={`/:path/:guildId`}>\n          <Modals />\n          <Guilds />\n          <Sidebar />\n          <Content />\n        </Route>\n\n        <Route path={`/:path`}>\n          <Modals />\n          <Guilds />\n          <Sidebar />\n          <Content />\n        </Route>\n      </Switch>\n    </div>\n  );\n\n  async function preloadUserInfo() {\n    CommonRequestManager.setToken(token);\n    SocketManager.setToken(token);\n    const userInfo = await UsersService.getUser('@me');\n    if (!userInfo) {\n      setToken('');\n      history.push('/login');\n      return;\n    }\n\n    const guilds = await GuildsService.getUserGuilds();\n\n    setUser(userInfo);\n    setGuilds(guilds.map((guild: Guild) => guild.id));\n    cacheGuilds(guilds);\n\n    SocketManager.init();\n\n    SocketManager.onLoad = () => setLoaded(true);\n  }\n\n  function closeContextMenu() {\n    setContextMenu({ visible: false });\n  }\n}\n\nfunction getRandomInt(max: number): number {\n  return Math.floor(Math.random() * Math.floor(max));\n}\n\nexport default App;\n\n","/home/miha/Documents/projects/js/nexomia-client/src/components/layout/Sidebar.tsx",["324","325","326"],"/home/miha/Documents/projects/js/nexomia-client/src/components/layout/Content.tsx",[],"/home/miha/Documents/projects/js/nexomia-client/src/components/layout/SidebarHeader.tsx",[],"/home/miha/Documents/projects/js/nexomia-client/src/components/layout/ContentHeader.tsx",[],"/home/miha/Documents/projects/js/nexomia-client/src/components/layout/Guilds.tsx",[],"/home/miha/Documents/projects/js/nexomia-client/src/components/guilds/UserMenu.tsx",[],"/home/miha/Documents/projects/js/nexomia-client/src/components/guilds/PanelButton.tsx",[],"/home/miha/Documents/projects/js/nexomia-client/src/views/Login.tsx",["327"],"import { css } from 'linaria';\n\nimport { useState, useRef, useEffect } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\n\nimport { useTranslation } from 'react-i18next';\n\nimport { useStore } from 'effector-react';\nimport $AuthStore, { setToken, setRefreshToken } from '../store/AuthStore';\n\nimport AuthService from '../services/api/auth/auth.service';\n\nimport '../styles/App.css';\n\nimport Layer from '../components/ui/Layer';\nimport Modal from '../components/ui/Modal';\nimport ModalHeader from '../components/ui/ModalHeader';\nimport InputField from '../components/ui/InputField';\nimport FilledButton from '../components/ui/FilledButton';\nimport StyledText from '../components/ui/StyledText';\nimport LoadingPlaceholder from '../components/ui/LoadingPlaceholder';\n\nconst modalCss = css`\n  width: 440px;\n`\n\nconst negativeColorCss = css`\n  color: var(--text-negative);\n`\n\nfunction Login() {\n  const { token } = useStore($AuthStore);\n  const history = useHistory();\n\n  useEffect(() => {\n    console.log(token)\n    if (token && token !== '') {\n      history.push('/home');\n    }\n  }, []);\n\n  const { t } = useTranslation(['reg']);\n\n  const [loginLoading, setLoginLoading] = useState(false);\n  const [emailError, setEmailError] = useState(false);\n  const [passwordError, setPasswordError] = useState(false);\n  const [loginError, setLoginError] = useState(false);\n\n  const emailInput = useRef<HTMLInputElement>(null);\n  const passwordInput = useRef<HTMLInputElement>(null);\n\n  useEffect(() => {\n    console.log(emailInput);\n  }, []);\n\n  return (\n    <div className=\"Login dark-theme\">\n      <Layer>\n        <Modal className={ modalCss }>\n          <LoadingPlaceholder title={ t('reg:logging_in') } active={ loginLoading } />\n          <ModalHeader>{ t('reg:log_in') }<br /><StyledText>{ t('reg:welcomer_log_in') }</StyledText></ModalHeader>\n          <InputField placeholder=\"Email\" ref={ emailInput } />\n          { (emailError && <StyledText className={ negativeColorCss }>{ t('reg:errors.required_field') }</StyledText>) }\n          <InputField placeholder={ t('reg:fields.password') } type=\"password\" hidden={ true } ref={ passwordInput } />\n          { (passwordError && <StyledText className={ negativeColorCss }>{ t('reg:errors.required_field') }</StyledText>) }\n          { (loginError && <StyledText className={ negativeColorCss }>{ t('reg:errors.invalid_credentials') }</StyledText>) }\n          <StyledText>{ t('reg:no_account') } <Link to=\"/register\">{ t('reg:register') }</Link></StyledText>\n          <FilledButton onClick={ login }>{ t('reg:continue') }</FilledButton>\n        </Modal>\n      </Layer>\n    </div>\n  );\n\n  async function login() {\n    setLoginError(false);\n    setEmailError(!emailInput.current?.value);\n    setPasswordError(!passwordInput.current?.value);\n\n    if (!emailInput.current?.value || !passwordInput.current?.value) return;\n\n    setLoginLoading(true);\n\n    const response = await AuthService.login(emailInput.current?.value, passwordInput.current?.value);\n\n    setLoginLoading(false);\n\n    if (!response) {\n      setLoginError(true);\n      return;\n    }\n\n    setToken(response.access_token);\n    setRefreshToken(response.refresh_token);\n\n    history.push('/home');\n  }\n}\n\nexport default Login;\n","/home/miha/Documents/projects/js/nexomia-client/src/components/ui/Layer.tsx",[],"/home/miha/Documents/projects/js/nexomia-client/src/components/ui/Modal.tsx",[],"/home/miha/Documents/projects/js/nexomia-client/src/components/ui/ModalHeader.tsx",[],"/home/miha/Documents/projects/js/nexomia-client/src/components/ui/InputField.tsx",[],"/home/miha/Documents/projects/js/nexomia-client/src/components/ui/FilledButton.tsx",[],"/home/miha/Documents/projects/js/nexomia-client/src/components/ui/StyledText.tsx",[],"/home/miha/Documents/projects/js/nexomia-client/src/views/Register.tsx",["328"],"import { css } from 'linaria';\n\nimport { useState, Fragment, useRef, useEffect } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\n\nimport { useTranslation } from 'react-i18next';\n\nimport { useStore } from 'effector-react';\nimport $AuthStore from '../store/AuthStore';\n\nimport AuthService from '../services/api/auth/auth.service';\n\nimport '../styles/App.css';\n\nimport Layer from '../components/ui/Layer';\nimport Modal from '../components/ui/Modal';\nimport ModalHeader from '../components/ui/ModalHeader';\nimport InputField from '../components/ui/InputField';\nimport FilledButton from '../components/ui/FilledButton';\nimport StyledText from '../components/ui/StyledText';\nimport LoadingPlaceholder from '../components/ui/LoadingPlaceholder';\n\nconst modalCss = css`\n  width: 440px\n`\n\nconst negativeColorCss = css`\n  color: var(--text-negative);\n`\n\nfunction Register() {\n  const { token } = useStore($AuthStore);\n  const history = useHistory();\n\n  useEffect(() => {\n    if (token) {\n      history.push('/channels/@me');\n    }\n  }, []);\n\n  const { t } = useTranslation(['reg']);\n\n  const [registerLoading, setRegisterLoading] = useState(false);\n  const [registerState, setRegisterState] = useState(0);\n  const [placeholderText] = useState(0);\n  const [emailError, setEmailError] = useState(false);\n  const [usernameError, setUsernameError] = useState(false);\n  const [passwordError, setPasswordError] = useState(false);\n\n  const emailInput = useRef<HTMLInputElement>(null);\n  const usernameInput = useRef<HTMLInputElement>(null);\n  const passwordInput = useRef<HTMLInputElement>(null);\n\n  return (\n    <div className=\"Login dark-theme\">\n      <Layer>\n        <Modal className={ modalCss }>\n          <LoadingPlaceholder title={ (placeholderText === 0 && 'Creating your account...') || 'Almost there...' } active={ registerLoading } />\n\n          { registerState === 0 && (\n            <Fragment>\n              <ModalHeader>{ t('reg:register') }<br /><StyledText>{ t('reg:welcomer_register') }</StyledText></ModalHeader>\n              <InputField placeholder=\"Email\" ref={ emailInput } />\n              { (emailError && <StyledText className={ negativeColorCss }>{ t('reg:errors.required_field') }</StyledText>) }\n              <InputField placeholder={ t('reg:fields.username') } ref={ usernameInput } />\n              { (usernameError && <StyledText className={ negativeColorCss }>{ t('reg:errors.required_field') }</StyledText>) }\n              <InputField placeholder={ t('reg:fields.password') } type=\"password\" ref={ passwordInput } hidden={ true } />\n              { (passwordError && <StyledText className={ negativeColorCss }>{ t('reg:errors.required_field') }</StyledText>) }\n              <StyledText>{ t('reg:has_account') } <Link to=\"/login\">{ t('reg:log_in') }</Link></StyledText>\n              <FilledButton onClick={ register }>{ t('reg:continue') }</FilledButton>\n            </Fragment>\n          ) }\n\n          { registerState === 1 && (\n            <Fragment>\n              <ModalHeader>{ t('reg:account_created') }<br /><StyledText>{ t('reg:account_log_in') }</StyledText></ModalHeader>\n              <FilledButton onClick={ login }>{ t('reg:continue') }</FilledButton>\n            </Fragment>\n          ) }\n        </Modal>\n      </Layer>\n    </div>\n  );\n\n  async function register() {\n    setEmailError(!emailInput.current?.value);\n    setUsernameError(!usernameInput.current?.value);\n    setPasswordError(!passwordInput.current?.value);\n\n    if (!emailInput.current?.value || !usernameInput.current?.value || !passwordInput.current?.value) return;\n\n    setRegisterLoading(true);\n\n    const response = await AuthService.register(\n      emailInput.current?.value,\n      usernameInput.current?.value,\n      passwordInput.current?.value\n    );\n\n    if (!response) return;\n\n    setRegisterLoading(false);\n    setRegisterState(1);\n  }\n\n  function login() {\n    history.push('/login');\n  }\n}\n\nexport default Register;\n","/home/miha/Documents/projects/js/nexomia-client/src/components/ui/LoadingPlaceholder.tsx",[],"/home/miha/Documents/projects/js/nexomia-client/src/components/animations/Dots.tsx",[],"/home/miha/Documents/projects/js/nexomia-client/src/i18n/config.ts",[],"/home/miha/Documents/projects/js/nexomia-client/src/services/api/auth/auth.service.ts",[],"/home/miha/Documents/projects/js/nexomia-client/src/services/api/common.ts",[],"/home/miha/Documents/projects/js/nexomia-client/src/config.ts",[],"/home/miha/Documents/projects/js/nexomia-client/src/services/api/users/users.service.ts",[],"/home/miha/Documents/projects/js/nexomia-client/src/services/api/guilds/guilds.service.ts",[],"/home/miha/Documents/projects/js/nexomia-client/src/components/layout/Modals.tsx",[],"/home/miha/Documents/projects/js/nexomia-client/src/components/modals/ServerCreationModal.tsx",[],"/home/miha/Documents/projects/js/nexomia-client/src/components/ui/BigPageButton.tsx",[],"/home/miha/Documents/projects/js/nexomia-client/src/components/css/PanelIconCss.tsx",[],"/home/miha/Documents/projects/js/nexomia-client/src/components/css/LayerBackgroundShadeCss.tsx",[],"/home/miha/Documents/projects/js/nexomia-client/src/components/css/InactiveLayerCss.tsx",[],"/home/miha/Documents/projects/js/nexomia-client/src/components/sidebar/Tab.tsx",[],"/home/miha/Documents/projects/js/nexomia-client/src/components/css/StyledIconCss.tsx",[],"/home/miha/Documents/projects/js/nexomia-client/src/store/UserStore.tsx",[],"/home/miha/Documents/projects/js/nexomia-client/src/store/AuthStore.tsx",[],"/home/miha/Documents/projects/js/nexomia-client/src/store/GuildStore.tsx",[],"/home/miha/Documents/projects/js/nexomia-client/src/store/ModalStore.tsx",[],"/home/miha/Documents/projects/js/nexomia-client/src/store/ChannelStore.tsx",[],"/home/miha/Documents/projects/js/nexomia-client/src/services/api/channels/channels.service.ts",[],"/home/miha/Documents/projects/js/nexomia-client/src/components/chat/ChatView.tsx",["329","330","331","332","333","334"],"import { useStore } from 'effector-react';\nimport { css } from 'linaria';\nimport { styled } from 'linaria/react';\nimport { Fragment, useEffect, useRef, useState } from 'react';\nimport $ChannelCacheStore from '../../store/ChannelCacheStore';\nimport { cacheMessages } from '../../store/MessageCacheStore';\nimport $MessageStore, { appendChannelMessages, clearLoadedMesssages } from '../../store/MessageStore';\nimport { ComputedPermissions } from '../../store/models/ComputedPermissions';\nimport $RoleCacheStore from '../../store/RolesCacheStore';\nimport PermissionCalculator from '../../utils/PermissionCalculator';\n\nimport MessagesService from '../../services/api/messages/messages.service';\n\nimport ChatInput from './ChatInput';\nimport MessageView from './MessageView';\nimport Message from '../../store/models/Message';\n\nconst MessageContainerWrapper = styled.div`\n  flex-grow: 1;\n`\n\nconst MessageContainer = styled.div`\n  position: relative;\n  width: 100%;\n  height: calc(100% + 26px);\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-end;\n`\n\nconst ScrollableContent = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  right: 0;\n  overflow: hidden auto;\n  box-sizing: border-box;\n`\n\nconst MessageWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex-grow: 1;\n  min-height: 100%;\n  padding-bottom: 32px;\n  justify-content: flex-end;\n`\n\ninterface ChatViewProps {\n  channel: string\n}\n\nfunction ChatView({ channel }: ChatViewProps) {\n  const scrollerRef = useRef<HTMLDivElement>(null);\n  const Messages = useStore($MessageStore);\n  const Channels = useStore($ChannelCacheStore);\n  const Roles = useStore($RoleCacheStore);\n\n  const [inputVisible, setInputVisible] = useState(getSendPermission());\n  const [loading, setLoading] = useState(false);\n  const [oldHeight, setOldHeight] = useState(0);\n  const [oldTop, setOldTop] = useState(0);\n\n  useEffect(() => {\n    setInputVisible(getSendPermission());\n  }, [Roles]);\n\n  useEffect(() => {\n    if (!loading) {\n      scrollView()\n    } else {\n      setLoading(false);\n    }\n  }, [channel, Messages[channel]]);\n\n  return (\n    <Fragment>\n      <MessageContainerWrapper>\n        <MessageContainer>\n          <ScrollableContent ref={ scrollerRef } onScroll={ handleScroll }>\n            <MessageWrapper>\n              <MessageView channel={ channel } onMessagesLoaded={ scrollView } />\n            </MessageWrapper>\n          </ScrollableContent>\n        </MessageContainer>\n      </MessageContainerWrapper>\n      { inputVisible ? (\n        <ChatInput channel={ channel } onMessageSent={ scrollView } />\n      ) : <div className={ css`height: 26px` } /> }\n    </Fragment>\n  )\n\n  function scrollView() {\n    if (!loading) {\n      scrollerRef.current?.scrollTo({ top: scrollerRef.current.scrollHeight, behavior: 'auto' });\n    }\n  }\n\n  function getSendPermission() {\n    return !!(PermissionCalculator.getUserPermissions(Channels[channel]?.guild_id || '', channel, '') & ComputedPermissions.WRITE_MESSAGES);\n  }\n\n  async function handleScroll() {\n    if (\n      scrollerRef?.current?.scrollTop &&\n      scrollerRef?.current?.scrollTop < 400 &&\n      !loading\n    ) {\n      setLoading(true);\n      const response = await MessagesService.getChannelMessages(channel, Messages[channel].length);\n      if (!response || !response.length) return;\n      cacheMessages(response);\n      appendChannelMessages({ channel, messages: response.map((message: Message) => message.id) });\n      setOldHeight(scrollerRef?.current?.scrollHeight);\n    } else if (\n      scrollerRef?.current?.scrollTop &&\n      scrollerRef?.current?.scrollTop > scrollerRef?.current?.scrollHeight - 100 - window.innerHeight &&\n      Messages[channel].length > 50\n    ) {\n      clearLoadedMesssages(channel);\n    }\n  }\n}\n\nexport default ChatView;\n","/home/miha/Documents/projects/js/nexomia-client/src/components/chat/ChatInput.tsx",[],"/home/miha/Documents/projects/js/nexomia-client/src/components/chat/MessageView.tsx",["335"],"import { Fragment, useEffect, useState } from 'react';\nimport { css } from 'linaria';\nimport Dots from '../animations/Dots';\nimport CenteredContainer from '../layout/CenteredContainer';\nimport MessageRenderer from './MessageRenderer';\n\nimport { useStore } from 'effector-react';\nimport $MessageStore, { setChannelMessages } from '../../store/MessageStore';\nimport $ChannelCacheStore from '../../store/ChannelCacheStore';\nimport $MessageCacheStore, { cacheMessages } from '../../store/MessageCacheStore';\nimport MessagesService from '../../services/api/messages/messages.service';\nimport Message from '../../store/models/Message';\n\ninterface MessageViewProps {\n  channel: string,\n  onMessagesLoaded: any\n}\n\nfunction MessageView({ channel, onMessagesLoaded }: MessageViewProps) {\n  const [loading, setLoading] = useState(false);\n  const MessageStore = useStore($MessageStore);\n  const MessageCacheStore = useStore($MessageCacheStore);\n  const CachedChannels = useStore($ChannelCacheStore);\n\n  let prevMessage = '';\n\n  useEffect(() => {\n    if (!MessageStore[channel] || !MessageStore[channel].length) setLoading(true);\n    if ((!MessageStore[channel] || !MessageStore[channel].length) && CachedChannels[channel]) {\n      loadMessages();\n      return;\n    }\n  }, [channel, CachedChannels]);\n\n  return (\n    <Fragment>\n      { loading ? (\n        <CenteredContainer className={ css`margin-bottom: 64px` }>\n          <Dots />\n        </CenteredContainer>\n      ) : (\n        (\n          MessageStore[channel] && (MessageStore[channel].length && MessageStore[channel].length !== 0) && (\n            MessageStore[channel].map((message) => {\n              const rendered =  (\n                <MessageRenderer\n                  id={ message }\n                  key={ message }\n                  grouped={ MessageCacheStore[prevMessage]?.author === MessageCacheStore[message]?.author }\n                  channel={ channel }\n                />\n              );\n\n              prevMessage = message;\n              return rendered;\n            })\n          )\n        ) || ''\n      ) }\n    </Fragment>\n  )\n\n  async function loadMessages() {\n    const response = await MessagesService.getChannelMessages(channel);\n    if (!response) return;\n    cacheMessages(response);\n    setChannelMessages({ channel, messages: response.map((message: Message) => message.id) });\n    setLoading(false);\n    onMessagesLoaded();\n  }\n}\n\nexport default MessageView;\n","/home/miha/Documents/projects/js/nexomia-client/src/components/layout/CenteredContainer.tsx",[],"/home/miha/Documents/projects/js/nexomia-client/src/services/api/messages/messages.service.ts",[],"/home/miha/Documents/projects/js/nexomia-client/src/store/MessageStore.tsx",[],"/home/miha/Documents/projects/js/nexomia-client/src/store/MessageCacheStore.tsx",[],"/home/miha/Documents/projects/js/nexomia-client/src/store/GuildCacheStore.tsx",[],"/home/miha/Documents/projects/js/nexomia-client/src/store/ChannelCacheStore.tsx",[],"/home/miha/Documents/projects/js/nexomia-client/src/store/UserCacheStore.tsx",[],"/home/miha/Documents/projects/js/nexomia-client/src/components/chat/MessageRenderer.tsx",[],"/home/miha/Documents/projects/js/nexomia-client/src/components/profile/ProfileView.tsx",[],"/home/miha/Documents/projects/js/nexomia-client/src/utils/isTabGuild.ts",[],"/home/miha/Documents/projects/js/nexomia-client/src/store/MemberCacheStore.tsx",[],"/home/miha/Documents/projects/js/nexomia-client/src/components/contextmenus/ContextMenu.tsx",[],"/home/miha/Documents/projects/js/nexomia-client/src/store/ContextMenuStore.tsx",[],"/home/miha/Documents/projects/js/nexomia-client/src/components/contextmenus/ContextTab.tsx",[],"/home/miha/Documents/projects/js/nexomia-client/src/components/settings/SettingsView.tsx",[],"/home/miha/Documents/projects/js/nexomia-client/src/components/settings/guild/RolesView.tsx",["336","337","338"],"import classNames from 'classnames';\nimport { useStore } from 'effector-react';\nimport { css } from 'linaria';\nimport { styled } from 'linaria/react';\nimport { ChangeEvent, Fragment, useEffect, useState } from 'react';\nimport { RiArrowLeftLine, RiArrowRightSLine } from 'react-icons/ri';\nimport { useParams } from 'react-router-dom';\nimport { List, arrayMove } from 'react-movable';\nimport RolesService from '../../../services/api/roles/roles.service';\nimport $GuildCacheStore, { setGuildRoles } from '../../../store/GuildCacheStore';\nimport PermissionOverwrites from '../../../store/models/PermissionOverwrites';\nimport $RoleCacheStore, { cacheRoles, updateRole } from '../../../store/RolesCacheStore';\nimport StyledIconCss from '../../css/StyledIconCss';\nimport InputField from '../../ui/InputField';\nimport LoadingPlaceholder from '../../ui/LoadingPlaceholder';\nimport StyledText from '../../ui/StyledText';\nimport PermissionEditor from '../ui/PermissionEditor';\nimport Role from '../ui/Role';\nimport PermissionCalculator from '../../../utils/PermissionCalculator';\nimport { ComputedPermissions } from '../../../store/models/ComputedPermissions';\n\nconst ButtonContainer = styled.div`\n  display: flex;\n  padding: 14px;\n  cursor: pointer;\n  border-radius: 4px;\n  flex-grow: 1;\n  flex-direction: row;\n  margin: 16px 0;\n\n  &:hover {\n    background: var(--background-light);\n  }\n`\n\nconst IconCss = css`\n  width: 20px;\n  height: 20px;\n  margin-right: 14px;\n`\n\nconst ColorDot = styled.div`\n  width: 16px;\n  height: 16px;\n  border-radius: 50%;\n  margin-right: 16px;\n`\n\nconst Container = styled.div`\n  padding: 16px;\n  border-radius: 4px;\n  background: var(--background-secondary-alt);\n  margin-bottom: 4px;\n  display: flex;\n  flex-grow: 1;\n  flex-direction: row;\n  align-items: center;\n\n  &:hover {\n    cursor: pointer;\n    background: var(--background-secondary);\n  }\n`\n\nconst Splitter = styled.div`\n  flex-grow: 1;\n`\n\nconst DefaultIconCss = css`\n  padding: 2px 4px;\n  border-radius: 2px;\n  background: var(--accent);\n  margin: 0;\n  font-size: 14px;\n`\n\nconst RoleIconCss = css`\n  width: 20px;\n  height: 20px;\n  margin-left: 16px;\n`\n\ninterface RouteParams {\n  guildId: string\n}\n\nfunction RolesView() {\n  const { guildId } = useParams<RouteParams>();\n  const GuildsCache = useStore($GuildCacheStore);\n  const RolesCache = useStore($RoleCacheStore);\n\n  const [roleList, setRoleList] = useState<string[]>([]);\n  \n  useEffect(() => {\n    setRoleList([ ...(GuildsCache[guildId]?.roles || []) ]);\n    setCanMove(\n      !!(\n        PermissionCalculator.getUserPermissions(guildId, '', '')\n        & (ComputedPermissions.MANAGE_ROLES | ComputedPermissions.ADMINISTRATOR)\n      )\n    );\n  }, []);\n\n  useEffect(() => {\n    setRoleList([ ...(GuildsCache[guildId]?.roles || []) ]);\n  }, [GuildsCache]);\n\n  const [canMove, setCanMove] = useState(false);\n\n  const [roleSelected, setRoleSelected] = useState('');\n  const [editedPermissions, setEditedPermissions] = useState<PermissionOverwrites>({ allow: 0, deny: 0 });\n  const [permissionsWasEdited, setPermissionsWasEdited] = useState(false);\n  const [saveLoading, setSaveLoading] = useState(false);\n\n  const [roleName, setRoleName] = useState('');\n  const [roleColor, setRoleColor] = useState('');\n\n  return (\n    <Fragment>\n      <LoadingPlaceholder title=\"Saving Changes...\" active={ saveLoading } />\n      { !roleSelected ? (\n        <Fragment>\n          <StyledText className={ css`text-align: center; margin: 32px 0` }>\n            Roles help you organize your server and configure permissions for your members.\n            <br />Role permissions are calculated from lowest (default) to highest role.\n          </StyledText>\n          { \n            <List\n              lockVertically\n              values={ roleList }\n              onChange={ \n                ({ oldIndex, newIndex }) => {\n                  const updatedRoleList = arrayMove(roleList, oldIndex, newIndex);\n                  updateRolePosition(newIndex, updatedRoleList);\n                  setRoleList(updatedRoleList);\n                }\n              }\n              renderList={ ({ children, props }) => <div { ...props }>{ children }</div> }\n              renderItem={ ({ value, props }) =>\n                <Container { ...props } onClick={ () => selectRole(value) }>\n                  <ColorDot\n                    style={{ background: RolesCache[value].color || 'var(--text-primary)' }}\n                  >\n                    <div data-movable-handle style={{ \n                      width: canMove && !RolesCache[value].default ? '100%' : '0px',\n                      height: canMove && !RolesCache[value].default ? '100%' : '0px',\n                      cursor: 'grab'\n                    }} />\n                  </ColorDot>\n                  <StyledText className={ css`margin: 0; font-weight: 900` }>{ RolesCache[value].name }</StyledText>\n                  <Splitter />\n                  { RolesCache[value].default && (<StyledText className={ DefaultIconCss }>DEFAULT</StyledText>) }\n                  <RiArrowRightSLine className={ classNames({ [StyledIconCss]: true, [RoleIconCss]: true }) } />\n                </Container>\n              }\n            />\n          }\n        </Fragment>\n      ) : (\n        <Fragment>\n          <ButtonContainer onClick={ () => goBack() }>\n            <RiArrowLeftLine className={ classNames({ [IconCss]: true, [StyledIconCss]: true }) } />\n            <StyledText className={ css`margin: 0; font-weight: 900` }>\n              { !permissionsWasEdited ? 'Back' : 'Save & Go Back' }\n            </StyledText>\n          </ButtonContainer>\n          <Role\n            name={ roleName }\n            color={ roleColor || 'var(--background-light)' }\n            defaultRole={ RolesCache[roleSelected].default === true }\n            active={ true }\n          />\n          <StyledText className={ css`text-align: center; margin: 48px 0 24px 0; font-size: 22px; font-weight: 900` }>\n            Appearance\n          </StyledText>\n          <StyledText className={ css`text-align: left; margin: 4px; font-size: 14px; font-weight: 900` }>\n            Role Name\n          </StyledText>\n          <InputField\n            className={ css`margin-top: 2px; margin-bottom: 16px` }\n            defaultValue={ RolesCache[roleSelected].name }\n            onChange={ (event: ChangeEvent<HTMLInputElement>) => { setRoleName(event.target.value); setPermissionsWasEdited(true) } }\n          />\n          <StyledText className={ css`text-align: left; margin: 4px; font-size: 14px; font-weight: 900` }>\n            Role Color\n          </StyledText>\n          <InputField\n            className={ css`margin-top: 2px; margin-bottom: 16px` }\n            defaultValue={ RolesCache[roleSelected].color }\n            onChange={ (event: ChangeEvent<HTMLInputElement>) => { setRoleColor(event.target.value); setPermissionsWasEdited(true) } }\n          />\n          <StyledText className={ css`text-align: center; margin: 48px 0 24px 0; font-size: 22px; font-weight: 900` }>\n            Permissions\n          </StyledText>\n          <StyledText className={ css`text-align: center; margin: 0 0 24px 0` }>\n            Configure permissions carefully, forcing a lot of permissions to \"allowed\" state is a bad practice, though you are not restricted from doing this. Higher roles will inherit all permissions from this role and apply their overwrites to them.\n          </StyledText>\n          \n          <PermissionEditor\n            initialPermissions={ RolesCache[roleSelected].permissions }\n            inherit={ !RolesCache[roleSelected].default }\n            onChange={ permissionsEdited }\n          />\n        </Fragment>\n      ) }\n    </Fragment>\n  )\n\n  function permissionsEdited(permissions: PermissionOverwrites) {\n    setEditedPermissions(permissions);\n    setPermissionsWasEdited(true);\n  }\n\n  function selectRole(role: string) {\n    setRoleName(RolesCache[role].name);\n    setRoleColor(RolesCache[role].color || '');\n    setRoleSelected(role);\n  }\n\n  async function goBack() {\n    if (permissionsWasEdited) {\n      setSaveLoading(true);\n\n      const response = await RolesService.patchRole(guildId, roleSelected, {\n        name: roleName,\n        color: roleColor,\n        permissions: editedPermissions\n      });\n\n      if (response) {\n        updateRole({ role: roleSelected, patch: response });\n      }\n\n      setSaveLoading(false);\n    }\n\n    setPermissionsWasEdited(false);\n    setRoleSelected('');\n  }\n\n  async function updateRolePosition(index: number, updatedRoleList: string[]) {\n    setGuildRoles({ guild: guildId, roles: updatedRoleList });\n    await RolesService.patchRole(guildId, updatedRoleList[index], { position: index + 1 });\n  }\n}\n\nexport default RolesView;\n","/home/miha/Documents/projects/js/nexomia-client/src/services/api/roles/roles.service.ts",[],"/home/miha/Documents/projects/js/nexomia-client/src/store/RolesCacheStore.tsx",[],"/home/miha/Documents/projects/js/nexomia-client/src/components/settings/ui/Role.tsx",[],"/home/miha/Documents/projects/js/nexomia-client/src/components/settings/ui/Permission.tsx",[],"/home/miha/Documents/projects/js/nexomia-client/src/components/settings/ui/PermissionEditor.tsx",[],"/home/miha/Documents/projects/js/nexomia-client/src/store/models/ComputedPermissions.ts",[],"/home/miha/Documents/projects/js/nexomia-client/src/components/layout/MemberSidebar.tsx",[],"/home/miha/Documents/projects/js/nexomia-client/src/utils/PermissionCalculator.ts",[],"/home/miha/Documents/projects/js/nexomia-client/src/components/sidebar/Member.tsx",[],"/home/miha/Documents/projects/js/nexomia-client/src/utils/getMemberColor.ts",[],"/home/miha/Documents/projects/js/nexomia-client/src/services/socket/SocketManager.ts",[],"/home/miha/Documents/projects/js/nexomia-client/src/services/socket/events/Messages.ts",[],"/home/miha/Documents/projects/js/nexomia-client/src/services/socket/events/Users.ts",[],"/home/miha/Documents/projects/js/nexomia-client/src/services/socket/events/Roles.ts",[],"/home/miha/Documents/projects/js/nexomia-client/src/utils/getUrlEncodedString.ts",[],"/home/miha/Documents/projects/js/nexomia-client/src/utils/getIconString.ts",[],"/home/miha/Documents/projects/js/nexomia-client/src/components/settings/guild/GeneralView.tsx",[],"/home/miha/Documents/projects/js/nexomia-client/src/components/ui/DropdownInput.tsx",[],"/home/miha/Documents/projects/js/nexomia-client/src/components/modals/ChannelCreationModal.tsx",["339"],"/home/miha/Documents/projects/js/nexomia-client/src/services/socket/events/Channels.ts",[],{"ruleId":"340","replacedBy":"341"},{"ruleId":"342","replacedBy":"343"},{"ruleId":"344","severity":1,"message":"345","line":56,"column":6,"nodeType":"346","endLine":56,"endColumn":8,"suggestions":"347"},{"ruleId":"348","severity":1,"message":"349","line":80,"column":26,"nodeType":"350","messageId":"351","endLine":80,"endColumn":35},{"ruleId":"344","severity":1,"message":"352","line":104,"column":6,"nodeType":"346","endLine":104,"endColumn":15,"suggestions":"353"},{"ruleId":"344","severity":1,"message":"354","line":109,"column":6,"nodeType":"346","endLine":109,"endColumn":16,"suggestions":"355"},{"ruleId":"344","severity":1,"message":"356","line":40,"column":6,"nodeType":"346","endLine":40,"endColumn":8,"suggestions":"357"},{"ruleId":"344","severity":1,"message":"356","line":39,"column":6,"nodeType":"346","endLine":39,"endColumn":8,"suggestions":"358"},{"ruleId":"348","severity":1,"message":"359","line":62,"column":10,"nodeType":"350","messageId":"351","endLine":62,"endColumn":19},{"ruleId":"348","severity":1,"message":"360","line":63,"column":10,"nodeType":"350","messageId":"351","endLine":63,"endColumn":16},{"ruleId":"348","severity":1,"message":"361","line":63,"column":18,"nodeType":"350","messageId":"351","endLine":63,"endColumn":27},{"ruleId":"344","severity":1,"message":"362","line":67,"column":6,"nodeType":"346","endLine":67,"endColumn":13,"suggestions":"363"},{"ruleId":"344","severity":1,"message":"364","line":75,"column":6,"nodeType":"346","endLine":75,"endColumn":34,"suggestions":"365"},{"ruleId":"344","severity":1,"message":"366","line":75,"column":16,"nodeType":"367","endLine":75,"endColumn":33},{"ruleId":"344","severity":1,"message":"368","line":33,"column":6,"nodeType":"346","endLine":33,"endColumn":31,"suggestions":"369"},{"ruleId":"348","severity":1,"message":"370","line":12,"column":27,"nodeType":"350","messageId":"351","endLine":12,"endColumn":37},{"ruleId":"344","severity":1,"message":"371","line":102,"column":6,"nodeType":"346","endLine":102,"endColumn":8,"suggestions":"372"},{"ruleId":"344","severity":1,"message":"354","line":106,"column":6,"nodeType":"346","endLine":106,"endColumn":19,"suggestions":"373"},{"ruleId":"348","severity":1,"message":"374","line":6,"column":10,"nodeType":"350","messageId":"351","endLine":6,"endColumn":23},"no-native-reassign",["375"],"no-negated-in-lhs",["376"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'preloadUserInfo'. Either include it or remove the dependency array.","ArrayExpression",["377"],"@typescript-eslint/no-unused-vars","'channelId' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'channels', 'loadChannels', 'path', and 'type'. Either include them or remove the dependency array.",["378"],"React Hook useEffect has a missing dependency: 'guildId'. Either include it or remove the dependency array.",["379"],"React Hook useEffect has missing dependencies: 'history' and 'token'. Either include them or remove the dependency array.",["380"],["381"],"'oldHeight' is assigned a value but never used.","'oldTop' is assigned a value but never used.","'setOldTop' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getSendPermission'. Either include it or remove the dependency array.",["382"],"React Hook useEffect has missing dependencies: 'loading' and 'scrollView'. Either include them or remove the dependency array.",["383"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","MemberExpression","React Hook useEffect has missing dependencies: 'MessageStore' and 'loadMessages'. Either include them or remove the dependency array.",["384"],"'cacheRoles' is defined but never used.","React Hook useEffect has missing dependencies: 'GuildsCache' and 'guildId'. Either include them or remove the dependency array.",["385"],["386"],"'cacheChannels' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"387","fix":"388"},{"desc":"389","fix":"390"},{"desc":"391","fix":"392"},{"desc":"393","fix":"394"},{"desc":"393","fix":"395"},{"desc":"396","fix":"397"},{"desc":"398","fix":"399"},{"desc":"400","fix":"401"},{"desc":"402","fix":"403"},{"desc":"402","fix":"404"},"Update the dependencies array to be: [preloadUserInfo]",{"range":"405","text":"406"},"Update the dependencies array to be: [channels, guildId, loadChannels, path, type]",{"range":"407","text":"408"},"Update the dependencies array to be: [channels, guildId]",{"range":"409","text":"410"},"Update the dependencies array to be: [history, token]",{"range":"411","text":"412"},{"range":"413","text":"412"},"Update the dependencies array to be: [Roles, getSendPermission]",{"range":"414","text":"415"},"Update the dependencies array to be: [channel, loading, scrollView]",{"range":"416","text":"417"},"Update the dependencies array to be: [channel, CachedChannels, MessageStore, loadMessages]",{"range":"418","text":"419"},"Update the dependencies array to be: [GuildsCache, guildId]",{"range":"420","text":"421"},{"range":"422","text":"421"},[1850,1852],"[preloadUserInfo]",[3121,3130],"[channels, guildId, loadChannels, path, type]",[3258,3268],"[channels, guildId]",[1095,1097],"[history, token]",[1045,1047],[1957,1964],"[Roles, getSendPermission]",[2076,2104],"[channel, loading, scrollView]",[1260,1285],"[channel, CachedChannels, MessageStore, loadMessages]",[2678,2680],"[GuildsCache, guildId]",[2770,2783]]